// Safety moderation system for crisis intervention

interface SafetyCheckResult {
    isSafe: boolean;
    riskLevel: 'none' | 'low' | 'medium' | 'high';
    triggeredWords: string[];
    intervention?: string;
    shouldSwitchToTherapist?: boolean;
}

// Crisis intervention phrases (Russian and English)
const CRISIS_KEYWORDS = {
    high: [
        // Russian high-risk phrases - direct
        '–Ω–µ —Ö–æ—á—É –∂–∏—Ç—å', '—Ö–æ—á—É —É–º–µ—Ä–µ—Ç—å', '—Å–µ–±—è —É–±–∏—Ç—å', '–ø–æ–∫–æ–Ω—á–∏—Ç—å —Å —Å–æ–±–æ–π',
        '–ª—É—á—à–µ –±—ã –Ω–µ –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è', '–∂–∏–∑–Ω—å –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞', '—Ö–æ—á—É –∏—Å—á–µ–∑–Ω—É—Ç—å',
        '–ø–µ—Ä–µ—Ä–µ–∑–∞—Ç—å –≤–µ–Ω—ã', '–ø–µ—Ä–µ–¥–æ–∑–∏—Ä–æ–≤–∫–∞', '—Å—É–∏—Ü–∏–¥', '—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ',
        '–ø–æ–≤–µ—Å–∏—Ç—å—Å—è', '–ø—Ä—ã–≥–Ω—É—Ç—å —Å –∫—Ä—ã—à–∏', '–ø–æ–¥ –ø–æ–µ–∑–¥',

        // Russian high-risk phrases - metaphorical
        '—Ö–æ—á—É –≤—ã–∫–ª—é—á–∏—Ç—å—Å—è', '–Ω–µ –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è', '–∏—Å—á–µ–∑–Ω—É—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞', '—Ä–∞—Å—Ç–≤–æ—Ä–∏—Ç—å—Å—è',
        '—Ä–µ–∂—É —Å–µ–±—è', '–ø–æ—Ä–µ–∑—ã', '—Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ', '–Ω–∞–Ω–æ—à—É —Å–µ–±–µ –≤—Ä–µ–¥',
        '–≥–æ–ª–æ—Å–∞ –≤ –≥–æ–ª–æ–≤–µ', '—Å–ª—ã—à—É –≥–æ–ª–æ—Å–∞', '–ø—Å–∏—Ö–æ–∑', '–≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–∏',
        '–º–Ω–æ–≥–æ —Ç–∞–±–ª–µ—Ç–æ–∫', '–ø–µ—Ä–µ–¥–æ–∑', '–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏', '–≥–µ—Ä–æ–∏–Ω', '–∫–æ–∫–∞–∏–Ω',

        // English high-risk phrases
        'want to die', 'kill myself', 'end it all', 'suicide', 'self harm',
        'cut myself', 'overdose', 'jump off', 'hang myself', 'not worth living',
        'better off dead', 'voices telling me'
    ],
    medium: [
        // Russian medium-risk phrases
        '—É—Å—Ç–∞–ª –æ—Ç –∂–∏–∑–Ω–∏', '–≤—Å—ë –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ', '–Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–µ–Ω',
        '–Ω–µ –º–æ–≥—É –±–æ–ª—å—à–µ', '—Ö–æ—á—É –∏—Å—á–µ–∑–Ω—É—Ç—å', '–Ω–µ—Ç —Å–∏–ª –∂–∏—Ç—å',
        '–±–æ–ª–∏—Ç –¥—É—à–∞', '—Ç–µ–º–Ω—ã–µ –º—ã—Å–ª–∏', '—Ö–æ—á–µ—Ç—Å—è —Å–ø–∞—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞',

        // English medium-risk phrases
        'tired of living', 'no point in life', 'nobody cares', 'can\'t go on',
        'want to disappear', 'dark thoughts', 'hopeless', 'worthless'
    ],
    low: [
        // Russian low-risk phrases
        '–ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', '–≥—Ä—É—Å—Ç–Ω–æ', '–¥–µ–ø—Ä–µ—Å—Å–∏—è', '—Ç—Ä–µ–≤–æ–≥–∞',
        '–æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ', '—Å—Ç—Ä–∞—Ö', '–±–æ–ª—å', '–ø–µ—á–∞–ª—å',

        // English low-risk phrases
        'feeling down', 'depressed', 'anxious', 'lonely', 'scared', 'sad'
    ]
};

// Crisis intervention responses by risk level
const INTERVENTIONS = {
    high: {
        ru: `‚ö†Ô∏è –Ø –∑–∞–º–µ—á–∞—é, —á—Ç–æ –≤–∞–º –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ —Å–µ–π—á–∞—Å. –í–∞—à–∞ –∂–∏–∑–Ω—å –≤–∞–∂–Ω–∞.

üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å:
‚Ä¢ –†–æ—Å—Å–∏—è: 8-800-2000-122 (–±–µ—Å–ø–ª–∞—Ç–Ω–æ, –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ)
‚Ä¢ –£–∫—Ä–∞–∏–Ω–∞: 7333 (–õ–∞–π—Ñ–ª–∞–π–Ω)
‚Ä¢ –ë–µ–ª–∞—Ä—É—Å—å: 8-801-100-16-11

üí¨ –û–Ω–ª–∞–π–Ω-–ø–æ–¥–¥–µ—Ä–∂–∫–∞:
‚Ä¢ –¢–µ–ª–µ–≥—Ä–∞–º: @psychological_help_bot
‚Ä¢ –°–∞–π—Ç: suicid.org

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É. –í—ã –Ω–µ –æ–¥–Ω–∏.`,

        en: `‚ö†Ô∏è I notice you're going through a very difficult time. Your life matters.

üÜò Crisis support:
‚Ä¢ US: 988 (Suicide & Crisis Lifeline)
‚Ä¢ UK: 116 123 (Samaritans)
‚Ä¢ International: befrienders.org

üí¨ Online support:
‚Ä¢ Crisis Text Line: Text HOME to 741741
‚Ä¢ 7 Cups: 7cups.com

Please reach out for professional help. You are not alone.`
    },
    medium: {
        ru: `üíô –Ø –≤–∏–∂—É, —á—Ç–æ –≤–∞–º —Å–µ–π—á–∞—Å —Ç—Ä—É–¥–Ω–æ. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî –∏–Ω–æ–≥–¥–∞ –∂–∏–∑–Ω—å –∫–∞–∂–µ—Ç—Å—è —Ç—è–∂–µ–ª–æ–π.

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è: 8-800-2000-122
‚Ä¢ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å –æ–Ω–ª–∞–π–Ω: psytalk.ru

üßò –ß—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:
‚Ä¢ –ì–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ (4 —Å—á–µ—Ç–∞ –≤–¥–æ—Ö, 6 ‚Äî –≤—ã–¥–æ—Ö)
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç —Å –±–ª–∏–∑–∫–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º
‚Ä¢ –ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ`,

        en: `üíô I can see you're struggling right now. It's normal to feel overwhelmed sometimes.

üìû Support available:
‚Ä¢ Crisis Text Line: Text HOME to 741741
‚Ä¢ BetterHelp: betterhelp.com
‚Ä¢ Psychology Today: psychologytoday.com

üßò What might help right now:
‚Ä¢ Deep breathing (4 counts in, 6 counts out)
‚Ä¢ Reaching out to someone you trust
‚Ä¢ Going for a walk outside`
    }
};

// Trigger words that should automatically switch to therapist voice
const THERAPIST_TRIGGER_WORDS = [
    // Russian
    '—Ç—Ä–∞–≤–º–∞', '—Ç—Ä–∞–≤–º—ã', '–¥–µ—Ç—Å—Ç–≤–æ', '—Ä–æ–¥–∏—Ç–µ–ª–∏', '–º–∞–º–∞', '–ø–∞–ø–∞', '–æ—Ç–µ—Ü', '–º–∞—Ç—å',
    '–Ω–∞—Å–∏–ª–∏–µ', '–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ', '–∞–≥—Ä–µ—Å—Å–∏—è', '–∑–ª–æ—Å—Ç—å', '–≥–Ω–µ–≤', '–æ–±–∏–¥–∞',
    '—Å—Ç—Ä–∞—Ö–∏', '—Ñ–æ–±–∏–∏', '–ø–∞–Ω–∏–∫–∞', '–ø–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏', '—Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å',
    '–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å', '–∞–ª–∫–æ–≥–æ–ª–∏–∑–º', '–Ω–∞—Ä–∫–æ–º–∞–Ω–∏—è', '–∫–æ–º–ø—É–ª—å—Å–∏–∏',
    '–ø—Å–∏—Ö–æ–∑', '–±—Ä–µ–¥', '–≥–∞–ª–ª—é—Ü–∏–Ω–∞—Ü–∏–∏', '–ø–∞—Ä–∞–Ω–æ–π—è',
    '–±–∏–ø–æ–ª—è—Ä–Ω–æ–µ', '—à–∏–∑–æ—Ñ—Ä–µ–Ω–∏—è', '–¥–µ–ø—Ä–µ—Å—Å–∏—è', '–æ–±—Å–µ—Å—Å–∏–≤–Ω–æ',
    '–Ω–∞–≤—è–∑—á–∏–≤—ã–µ –º—ã—Å–ª–∏', '–∫–æ–º–ø—É–ª—å—Å–∏–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ',

    // English
    'trauma', 'childhood', 'parents', 'mother', 'father', 'abuse', 'rape',
    'aggression', 'anger', 'resentment', 'fears', 'phobias', 'panic',
    'panic attacks', 'anxiety', 'addiction', 'alcoholism', 'substance abuse',
    'psychosis', 'delusions', 'hallucinations', 'paranoia', 'bipolar',
    'schizophrenia', 'depression', 'obsessive', 'compulsive'
];

export function checkSafetyContent(text: string, locale: 'ru' | 'en' = 'ru'): SafetyCheckResult {
    if (!text || typeof text !== 'string') {
        return { isSafe: true, riskLevel: 'none', triggeredWords: [] };
    }

    const normalizedText = text.toLowerCase().trim();
    const triggeredWords: string[] = [];
    let riskLevel: 'none' | 'low' | 'medium' | 'high' = 'none';
    let shouldSwitchToTherapist = false;

    // Check for therapist trigger words first
    for (const keyword of THERAPIST_TRIGGER_WORDS) {
        if (normalizedText.includes(keyword.toLowerCase())) {
            shouldSwitchToTherapist = true;
            break;
        }
    }

    // Check high-risk keywords first
    for (const keyword of CRISIS_KEYWORDS.high) {
        if (normalizedText.includes(keyword.toLowerCase())) {
            triggeredWords.push(keyword);
            riskLevel = 'high';
        }
    }

    // If no high-risk, check medium-risk
    if (riskLevel === 'none') {
        for (const keyword of CRISIS_KEYWORDS.medium) {
            if (normalizedText.includes(keyword.toLowerCase())) {
                triggeredWords.push(keyword);
                riskLevel = 'medium';
            }
        }
    }

    // If no medium-risk, check low-risk
    if (riskLevel === 'none') {
        for (const keyword of CRISIS_KEYWORDS.low) {
            if (normalizedText.includes(keyword.toLowerCase())) {
                triggeredWords.push(keyword);
                riskLevel = 'low';
            }
        }
    }

    const isSafe = riskLevel === 'none' || riskLevel === 'low';
    let intervention: string | undefined;

    // Provide intervention for medium and high risk
    if (riskLevel === 'high' || riskLevel === 'medium') {
        intervention = INTERVENTIONS[riskLevel][locale];
    }

    return {
        isSafe,
        riskLevel,
        triggeredWords,
        intervention,
        shouldSwitchToTherapist
    };
}

// Log safety incidents for monitoring
export async function logSafetyIncident(
    userId: string | null,
    guestId: string | null,
    text: string,
    riskLevel: string,
    triggeredWords: string[]
) {
    // In a real implementation, you would log this to your monitoring system
    // For now, we'll just console.log
    console.warn('Safety incident detected:', {
        userId,
        guestId,
        riskLevel,
        triggeredWords,
        timestamp: new Date().toISOString(),
        textLength: text.length
    });

    // TODO: Implement actual logging to database or monitoring service
    // await sql`
    //   insert into safety_incidents (user_id, guest_id, risk_level, triggered_words, created_at)
    //   values (${userId}, ${guestId}, ${riskLevel}, ${JSON.stringify(triggeredWords)}, now())
    // `;
}

// Dictionary of trigger words for safety system
export const SAFETY_TRIGGER_WORDS = {
    CRISIS_KEYWORDS,
    THERAPIST_TRIGGER_WORDS,
    INTERVENTIONS
};