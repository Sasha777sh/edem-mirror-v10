// –ê—Ä—Ö–µ—Ç–∏–ø—ã –¥–ª—è PRO-–≤–µ—Ä—Å–∏–∏ (–¥–ª–∏–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è PDF-–æ—Ç—á—ë—Ç–æ–≤)

export interface Archetype {
    id: string;
    name: string;
    shortDescription: string; // –¥–ª—è —á–∞—Ç–∞ (30-40 —Å–∏–º–≤–æ–ª–æ–≤)
    strength: string;
    distortion: string;
    manifestation: string;
    howToRestore: string;
    emoji: string;
}

export const ARCHETYPES: Archetype[] = [
    {
        id: 'guardian',
        name: '–°—Ç—Ä–∞–∂',
        shortDescription: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å –ø–æ—Ä—è–¥–∫–∞ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏',
        strength: '–¥–µ—Ä–∂–∞—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ—Ä—è–¥–æ–∫',
        distortion: '–¥–µ—Ä–∂–∏—à—å –≤—Å—ë, –¥–∞–∂–µ —Ç–æ, —á—Ç–æ —Ä–∞–∑—Ä—É—à–∞–µ—Ç',
        manifestation: '–∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ª—é–¥—å–º–∏, –¥–µ–Ω—å–≥–∞–º–∏, –¥–µ—Ç–∞–ª—è–º–∏, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—É—Å—Ç–∏—Ç—å',
        howToRestore: '–¥–æ–≤–µ—Ä–∏–µ –∫ —Å–µ–±–µ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Ç–ø—É—Å–∫–∞—Ç—å —Ç–æ, —á—Ç–æ –Ω–µ —Ç–≤–æ—ë',
        emoji: 'üõ°Ô∏è'
    },
    {
        id: 'refugee',
        name: '–ë–µ–≥–ª–µ—Ü',
        shortDescription: '–ú–∞—Å—Ç–µ—Ä –±—ã—Å—Ç—Ä—ã—Ö –ø–µ—Ä–µ–º–µ–Ω –∏ –Ω–æ–≤—ã—Ö –Ω–∞—á–∞–ª',
        strength: '—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±—ã—Å—Ç—Ä–æ —É—Ö–æ–¥–∏—Ç—å –∏–∑ –æ–ø–∞—Å–Ω–æ–≥–æ',
        distortion: '—É–±–µ–≥–∞–µ—à—å –¥–∞–∂–µ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –≤–∞–∂–Ω–æ',
        manifestation: '–∏–∑–±–µ–≥–∞–Ω–∏–µ –±–ª–∏–∑–æ—Å—Ç–∏, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –Ω–æ–≤—ã–µ —Å—Ç–∞—Ä—Ç—ã –±–µ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è',
        howToRestore: '—Å–º–µ–ª–æ—Å—Ç—å –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞—à–Ω–æ',
        emoji: 'üèÉ'
    },
    {
        id: 'hero',
        name: '–ì–µ—Ä–æ–π',
        shortDescription: '–í–æ–∏–Ω, –±–µ—Ä—É—â–∏–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ —Å–µ–±—è',
        strength: '–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –±—Ä–∞—Ç—å –Ω–∞ —Å–µ–±—è',
        distortion: '–≥–µ—Ä–æ–π—Å—Ç–≤—É–µ—à—å —Ç–∞–º, –≥–¥–µ –Ω—É–∂–Ω–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å, –∞ –Ω–µ –ø–æ–¥–≤–∏–≥',
        manifestation: '–≤—ã–≥–æ—Ä–∞–Ω–∏–µ, —Å–ø–∞—Å–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –∏–≥–Ω–æ—Ä —Å–≤–æ–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π',
        howToRestore: '—É–º–µ–Ω–∏–µ –±—ã—Ç—å –æ–±—ã—á–Ω—ã–º –∏ –≤—ã–±–∏—Ä–∞—Ç—å —Å–µ–±—è',
        emoji: '‚öîÔ∏è'
    },
    {
        id: 'orphan',
        name: '–°–∏—Ä–æ—Ç–∞',
        shortDescription: '–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫ –±–æ–ª–∏ –¥—Ä—É–≥–∏—Ö –∏ —Å–µ–±—è',
        strength: '—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏—Ö, –≤–∏–¥–µ—Ç—å —Å–ª–∞–±–æ–µ',
        distortion: '–≤–µ—á–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ –±—Ä–æ—à–µ–Ω–Ω–æ—Å—Ç–∏',
        manifestation: '–æ–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –æ–±–∏–¥–∞ –Ω–∞ ¬´–º–∏—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∞–ª¬ª',
        howToRestore: '—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç—å –¥–æ–≤–µ—Ä–∏–µ –∏ –∏—Å–∫–∞—Ç—å –æ–ø–æ—Ä—É –≤–Ω—É—Ç—Ä–∏',
        emoji: 'ü•∫'
    },
    {
        id: 'ruler',
        name: '–ü—Ä–∞–≤–∏—Ç–µ–ª—å',
        shortDescription: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏ –ª—é–¥–µ–π',
        strength: '—Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ø—Ä–∞–≤–∏–ª–∞',
        distortion: '–ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å —Ä–∞–¥–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è',
        manifestation: '–≤—Å—ë –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ¬´–ø–æ-–º–æ–µ–º—É¬ª, –Ω–µ—Ç –≥–∏–±–∫–æ—Å—Ç–∏',
        howToRestore: '—É–º–µ–Ω–∏–µ –ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –¥–æ–≤–µ—Ä–∏–µ, –∞ –Ω–µ —Å—Ç—Ä–∞—Ö',
        emoji: 'üëë'
    },
    {
        id: 'seeker',
        name: '–ò—Å–∫–∞—Ç–µ–ª—å',
        shortDescription: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å —Å–º—ã—Å–ª–æ–≤ –∏ –≥–ª—É–±–∏–Ω',
        strength: '–∏–¥—Ç–∏ –∑–∞ –Ω–æ–≤—ã–º, –∏—Å–∫–∞—Ç—å –≥–ª—É–±–∏–Ω—É',
        distortion: '–≤–µ—á–Ω–∞—è –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç—å, ¬´–∑–¥–µ—Å—å –Ω–µ —Ç–æ¬ª',
        manifestation: '–≤–µ—á–Ω—ã–π –ø–æ–∏—Å–∫ —Å–º—ã—Å–ª–æ–≤, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–≤–æ–¥–∏—Ç—Å—è',
        howToRestore: '—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ',
        emoji: 'üîç'
    },
    {
        id: 'lover',
        name: '–õ—é–±–æ–≤–Ω–∏–∫',
        shortDescription: '–ú–∞—Å—Ç–µ—Ä —Å–≤—è–∑–∏ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–ª–∏–∑–æ—Å—Ç–∏',
        strength: '—Å–≤—è–∑—å, —Å—Ç—Ä–∞—Å—Ç—å, —á—É–≤—Å—Ç–≤–æ–≤–∞–Ω–∏–µ',
        distortion: '—Ä–∞—Å—Ç–≤–æ—Ä–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–º, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ø—Ä–∏–∑–Ω–∞–Ω–∏—è',
        manifestation: '—Ä–µ–≤–Ω–æ—Å—Ç—å, —Å—Ç—Ä–∞—Ö –ø–æ—Ç–µ—Ä—è—Ç—å –ª—é–±–æ–≤—å, –∂–µ—Ä—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å',
        howToRestore: '–ª—é–±–æ–≤—å –∫ —Å–µ–±–µ –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫, –∞ –Ω–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ',
        emoji: 'üíï'
    },
    {
        id: 'magician',
        name: '–ú–∞–≥',
        shortDescription: '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤–∏–¥—è—â–∏–π —Å–≤—è–∑–∏',
        strength: '—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å, –≤–∏–¥–µ—Ç—å —Å–≤—è–∑–∏',
        distortion: '–º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è, –∏–ª–ª—é–∑–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—è —á–µ—Ä–µ–∑ –∑–Ω–∞–Ω–∏—è',
        manifestation: '¬´—è –∑–Ω–∞—é, –∫–∞–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å¬ª ‚Äî –∏ –ø–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é',
        howToRestore: '—Å–º–∏—Ä–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏–ª—ã –¥–ª—è —Å–æ–∑–∏–¥–∞–Ω–∏—è',
        emoji: 'üîÆ'
    }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞—Ä—Ö–µ—Ç–∏–ø–∞ –ø–æ –ø–æ–ª—è—Ä–Ω–æ—Å—Ç–∏ –∏ —Å–ª–æ–≤–∞–º
export function detectArchetype(polarity: string, oneWord: string, problem: string): Archetype {
    const problemLower = problem.toLowerCase();
    const wordLower = oneWord.toLowerCase();

    // –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞—Ä—Ö–µ—Ç–∏–ø–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    if (polarity === 'control' || wordLower.includes('–∫–æ–Ω—Ç—Ä–æ–ª—å') || problemLower.includes('–∫–æ–Ω—Ç—Ä–æ–ª')) {
        if (problemLower.includes('–ø–æ—Ä—è–¥–æ–∫') || problemLower.includes('–ø—Ä–∞–≤–∏–ª')) {
            return ARCHETYPES.find(a => a.id === 'ruler') || ARCHETYPES[0];
        }
        return ARCHETYPES.find(a => a.id === 'guardian') || ARCHETYPES[0];
    }

    if (polarity === 'rejection' || wordLower.includes('–æ–¥–∏–Ω–æ—á') || problemLower.includes('–±—Ä–æ—Å')) {
        return ARCHETYPES.find(a => a.id === 'orphan') || ARCHETYPES[0];
    }

    if (polarity === 'loss' || wordLower.includes('–ø–æ—Ç–µ—Ä') || problemLower.includes('—É—à—ë–ª')) {
        if (problemLower.includes('–ª—é–±–æ–≤') || problemLower.includes('–æ—Ç–Ω–æ—à–µ–Ω')) {
            return ARCHETYPES.find(a => a.id === 'lover') || ARCHETYPES[0];
        }
        return ARCHETYPES.find(a => a.id === 'refugee') || ARCHETYPES[0];
    }

    if (wordLower.includes('–æ—Ç–≤–µ—Ç—Å—Ç–≤') || problemLower.includes('–ø–æ–º–æ–≥') || problemLower.includes('—Å–ø–∞—Å')) {
        return ARCHETYPES.find(a => a.id === 'hero') || ARCHETYPES[0];
    }

    if (wordLower.includes('—Å–º—ã—Å–ª') || problemLower.includes('–ø–æ–∏—Å–∫') || problemLower.includes('–ø–æ–Ω–∏–º–∞–π')) {
        return ARCHETYPES.find(a => a.id === 'seeker') || ARCHETYPES[0];
    }

    if (wordLower.includes('–∑–Ω–∞–Ω') || problemLower.includes('–ø–æ–Ω–∏–º–∞–π') || problemLower.includes('–æ–±—ä—è—Å–Ω')) {
        return ARCHETYPES.find(a => a.id === 'magician') || ARCHETYPES[0];
    }

    // Fallback –∫ —Å–ª—É—á–∞–π–Ω–æ–º—É –∞—Ä—Ö–µ—Ç–∏–ø—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–µ—à–∞
    const hash = (oneWord + problem).split('').reduce((a, b) => a + b.charCodeAt(0), 0);
    return ARCHETYPES[hash % ARCHETYPES.length];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ä—Ö–µ—Ç–∏–ø–∞ –ø–æ ID
export function getArchetypeById(id: string): Archetype | undefined {
    return ARCHETYPES.find(a => a.id === id);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∞—Ä—Ö–µ—Ç–∏–ø–∞
export function getRandomArchetype(): Archetype {
    const randomIndex = Math.floor(Math.random() * ARCHETYPES.length);
    return ARCHETYPES[randomIndex];
}