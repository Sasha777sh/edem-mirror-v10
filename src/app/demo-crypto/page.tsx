'use client';

import { useState } from 'react';
import { Bitcoin, CheckCircle, ExternalLink, Loader } from 'lucide-react';

export default function DemoCryptoPage() {
    const [step, setStep] = useState<'select' | 'payment' | 'success'>('select');
    const [loading, setLoading] = useState(false);
    const [paymentData, setPaymentData] = useState<any>(null);

    const createPayment = async (plan: '24h' | '30d', crypto: string) => {
        setLoading(true);

        try {
            const response = await fetch('/api/crypto/checkout', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    plan,
                    crypto_currency: crypto
                })
            });

            const data = await response.json();

            if (data.payment_url) {
                setPaymentData(data);
                setStep('payment');
            } else {
                throw new Error(data.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
            }
        } catch (error) {
            console.error('Payment error:', error);
            alert('–û—à–∏–±–∫–∞: ' + (error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        } finally {
            setLoading(false);
        }
    };

    const simulateSuccess = () => {
        setStep('success');
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-violet-50 to-purple-50 p-6">
            <div className="max-w-2xl mx-auto">
                <div className="text-center mb-8">
                    <h1 className="text-4xl font-bold text-gray-900 mb-4">
                        üöÄ EDEM –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂–∏
                    </h1>
                    <p className="text-xl text-gray-600">
                        –î–µ–º–æ-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NOWPayments –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
                    </p>
                </div>

                {step === 'select' && (
                    <div className="bg-white rounded-2xl shadow-xl p-8">
                        <h2 className="text-2xl font-semibold mb-6 text-center">
                            –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É
                        </h2>

                        <div className="grid md:grid-cols-2 gap-6 mb-8">
                            {/* 24h –ø–ª–∞–Ω */}
                            <div className="border-2 border-gray-200 rounded-xl p-6 hover:border-violet-300 transition-colors">
                                <h3 className="text-xl font-semibold mb-2">24 —á–∞—Å–∞ PRO</h3>
                                <div className="text-3xl font-bold text-violet-600 mb-4">$5.99</div>
                                <ul className="text-sm text-gray-600 space-y-2 mb-6">
                                    <li>‚úì –í—Å–µ –≥–æ–ª–æ—Å–∞ EDEM</li>
                                    <li>‚úì –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</li>
                                    <li>‚úì –ò—Å—Ç–æ—Ä–∏—è –Ω–∞ 24 —á–∞—Å–∞</li>
                                </ul>

                                <div className="space-y-2">
                                    <div className="text-sm font-medium text-gray-700 mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É:</div>
                                    {['btc', 'eth', 'usdt'].map(crypto => (
                                        <button
                                            key={crypto}
                                            onClick={() => createPayment('24h', crypto)}
                                            disabled={loading}
                                            className="w-full flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 disabled:opacity-50"
                                        >
                                            <Bitcoin className="w-5 h-5" />
                                            <span className="font-medium">{crypto.toUpperCase()}</span>
                                            {loading && <Loader className="w-4 h-4 animate-spin ml-auto" />}
                                        </button>
                                    ))}
                                </div>
                            </div>

                            {/* 30d –ø–ª–∞–Ω */}
                            <div className="border-2 border-violet-300 rounded-xl p-6 bg-violet-50">
                                <div className="flex items-center gap-2 mb-2">
                                    <h3 className="text-xl font-semibold">30 –¥–Ω–µ–π PRO</h3>
                                    <span className="bg-violet-600 text-white text-xs px-2 py-1 rounded">–ü–û–ü–£–õ–Ø–†–ù–´–ô</span>
                                </div>
                                <div className="text-3xl font-bold text-violet-600 mb-4">$19.99</div>
                                <ul className="text-sm text-gray-600 space-y-2 mb-6">
                                    <li>‚úì –ü–æ–ª–Ω—ã–µ –æ—Ç—á—ë—Ç—ã —Å –∞—Ä—Ö–µ—Ç–∏–ø–∞–º–∏</li>
                                    <li>‚úì PDF —ç–∫—Å–ø–æ—Ä—Ç</li>
                                    <li>‚úì –ò—Å—Ç–æ—Ä–∏—è –Ω–∞ 30 –¥–Ω–µ–π</li>
                                    <li>‚úì –ü—Ä–∞–∫—Ç–∏–∫–∏ –∏ —à–∞–≥–∏</li>
                                </ul>

                                <div className="space-y-2">
                                    <div className="text-sm font-medium text-gray-700 mb-2">–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É:</div>
                                    {['btc', 'eth', 'usdt'].map(crypto => (
                                        <button
                                            key={crypto}
                                            onClick={() => createPayment('30d', crypto)}
                                            disabled={loading}
                                            className="w-full flex items-center gap-3 p-3 border border-violet-200 rounded-lg hover:bg-violet-100 disabled:opacity-50"
                                        >
                                            <Bitcoin className="w-5 h-5" />
                                            <span className="font-medium">{crypto.toUpperCase()}</span>
                                            {loading && <Loader className="w-4 h-4 animate-spin ml-auto" />}
                                        </button>
                                    ))}
                                </div>
                            </div>
                        </div>
                    </div>
                )}

                {step === 'payment' && paymentData && (
                    <div className="bg-white rounded-2xl shadow-xl p-8">
                        <div className="text-center mb-6">
                            <CheckCircle className="w-16 h-16 text-green-500 mx-auto mb-4" />
                            <h2 className="text-2xl font-semibold mb-2">–ü–ª–∞—Ç—ë–∂ —Å–æ–∑–¥–∞–Ω!</h2>
                            <p className="text-gray-600">–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å</p>
                        </div>

                        <div className="space-y-4 mb-6">
                            <div className="bg-gray-50 rounded-lg p-4">
                                <div className="text-sm text-gray-600">–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</div>
                                <div className="text-2xl font-bold">
                                    {paymentData.pay_amount} {paymentData.pay_currency?.toUpperCase()}
                                </div>
                            </div>

                            <div className="bg-gray-50 rounded-lg p-4">
                                <div className="text-sm text-gray-600 mb-2">–ê–¥—Ä–µ—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:</div>
                                <code className="block bg-white p-2 rounded border text-sm break-all">
                                    {paymentData.pay_address}
                                </code>
                            </div>

                            <div className="bg-gray-50 rounded-lg p-4">
                                <div className="text-sm text-gray-600">Payment ID:</div>
                                <div className="font-mono text-sm">{paymentData.payment_id}</div>
                            </div>
                        </div>

                        <div className="flex gap-4">
                            <a
                                href={paymentData.payment_url}
                                target="_blank"
                                rel="noopener noreferrer"
                                className="flex-1 flex items-center justify-center gap-2 bg-violet-600 text-white py-3 px-4 rounded-lg hover:bg-violet-700"
                            >
                                <ExternalLink className="w-4 h-4" />
                                –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã
                            </a>

                            <button
                                onClick={simulateSuccess}
                                className="flex-1 bg-green-600 text-white py-3 px-4 rounded-lg hover:bg-green-700"
                            >
                                üß™ –°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—Ö
                            </button>
                        </div>

                        <div className="text-xs text-gray-500 text-center mt-4">
                            –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                        </div>
                    </div>
                )}

                {step === 'success' && (
                    <div className="bg-white rounded-2xl shadow-xl p-8 text-center">
                        <div className="text-6xl mb-4">üéâ</div>
                        <h2 className="text-3xl font-bold text-green-600 mb-4">–ü–ª–∞—Ç—ë–∂ —É—Å–ø–µ—à–µ–Ω!</h2>
                        <p className="text-xl text-gray-600 mb-6">
                            –í–∞—à–∞ PRO –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
                        </p>

                        <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
                            <h3 className="font-semibold text-green-800 mb-2">–ß—Ç–æ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ:</h3>
                            <ul className="text-sm text-green-700 space-y-1">
                                <li>‚úì –í—Å–µ –≥–æ–ª–æ—Å–∞ EDEM</li>
                                <li>‚úì –ü–æ–ª–Ω—ã–µ –æ—Ç—á—ë—Ç—ã —Å –∞—Ä—Ö–µ—Ç–∏–ø–∞–º–∏</li>
                                <li>‚úì PDF —ç–∫—Å–ø–æ—Ä—Ç</li>
                                <li>‚úì –ü—Ä–∞–∫—Ç–∏–∫–∏ –∏ —à–∞–≥–∏ –Ω–∞ –¥–µ–Ω—å</li>
                                <li>‚úì –ò—Å—Ç–æ—Ä–∏—è –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</li>
                            </ul>
                        </div>

                        <button
                            onClick={() => window.location.href = '/app'}
                            className="bg-violet-600 text-white py-3 px-8 rounded-lg hover:bg-violet-700 text-lg font-medium"
                        >
                            –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                        </button>
                    </div>
                )}

                {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ */}
                <div className="fixed bottom-4 right-4 bg-yellow-100 border border-yellow-300 rounded-lg p-3 text-sm">
                    <div className="flex items-center gap-2">
                        <span className="text-yellow-600">üß™</span>
                        <span className="font-medium text-yellow-800">–î–µ–º–æ-—Ä–µ–∂–∏–º</span>
                    </div>
                    <div className="text-yellow-700 text-xs mt-1">
                        –†–µ–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
                    </div>
                </div>
            </div>
        </div>
    );
}